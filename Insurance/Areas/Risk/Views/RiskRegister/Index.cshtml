@model IEnumerable<RiskRegisterViewModel>
@{
    ViewData["Title"] = "Risk Register";
    int i = 1;
}

<div class="d-flex mb-3">
    <a asp-area="Risk"
       asp-controller="RiskRegister"
       asp-action="CreateUpdate"
       class="btn btn-sm btn-outline-primary">
        <i class="bi bi-plus-circle-fill"></i>&nbsp; New Risk
    </a>

    @*  <a data-toggle="modal" class="btn btn-sm btn-outline-success ms-2"
       href="#" data-target="#importExcelData">
        <i class="bi bi-file-earmark-arrow-up me-1"></i>
        Import from Excel
    </a> *@


    <a class="btn btn-sm btn-outline-success ms-2"
       href="#"
       role="button"
       data-bs-toggle="modal"
       data-bs-target="#importExcelData">
        <i class="bi bi-file-earmark-arrow-up me-1"></i>
        Import from Excel
    </a>
</div>


<div class="table-responsive">
    <table id="example" class="table table-striped" style="width:100%">
        <thead>
            <tr>
                <th>S.N</th>
                <th>Actions</th>
                <th>@Html.DisplayNameFor(model => model.RiskID)</th>
                <th>@Html.DisplayNameFor(model => model.RegisterDate)</th>
                <th>@Html.DisplayNameFor(model => model.Department)</th>
                <th>@Html.DisplayNameFor(model => model.PrimaryRisk)</th>
                <th>@Html.DisplayNameFor(model => model.SecondaryRisk)</th>
                <th>@Html.DisplayNameFor(model => model.LikeHoodScore)</th>
                <th>@Html.DisplayNameFor(model => model.ImpactScore)</th>
                <th>@Html.DisplayNameFor(model => model.Matrix)</th>
                <th>@Html.DisplayNameFor(model => model.RiskLevel)</th>
                <th>@Html.DisplayNameFor(model => model.RiskOwner)</th>
                <th>@Html.DisplayNameFor(model => model.RiskStatus)</th>
                <th>@Html.DisplayNameFor(model => model.ClosedDate)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @i
                    </td>
                    <td>
                        <div class="d-inline">
                            @if (@item.RiskStatus == "Open")
                            {
                                <a asp-action="CreateUpdate" asp-route-id="@item.ID" class="text-decoration-none me-3"><i class="bi bi-pencil"></i></a>
                                <a asp-action="Details" asp-route-id="@item.ID" class="text-decoration-none me-3"><i class="bi bi-eye text-warning"></i></a>
                                <form asp-action="Delete" asp-route-id="@item.ID" data-ajax="true" data-ajax-method="post" data-ajax-confirm="Are you sure?" data-ajax-complete="deletePage" class="d-inline">
                                    <button type="submit" class="btn btn-link p-0"> <i class="bi bi-trash text-red"></i></button>
                                </form>
                            }
                            else
                            {
                                <a asp-action="Details" asp-route-id="@item.ID" class="text-decoration-none me-3"><i class="bi bi-eye text-warning"></i></a>

                            }

                        </div>
                    </td>
                    <td>@item.RiskID</td>
                    <td>@(item.RegisterDate.HasValue ? item.RegisterDate.Value.ToString("yyyy-MM-dd") : string.Empty)</td>
                    <td>@item.Department</td>
                    <td>@item.PrimaryRisk</td>
                    <td>@item.SecondaryRisk</td>
                    <td>@item.LikeHoodScore</td>
                    <td>@item.ImpactScore</td>
                    <td>@(item.LikeHoodScore * item.ImpactScore)</td>
                    <td class="@(item.RiskLevel == "HIGH" ? "bg-danger text-white" : "")">
                        @item.RiskLevel
                    </td>
                    <td>@item.RiskOwner</td>
                    <td class="@(item.RiskStatus == "Close" ? "table-success" : "")">
                        @item.RiskStatus
                    </td>
                    <td>@(item.ClosedDate.HasValue ? item.ClosedDate.Value.ToString("yyyy-MM-dd") : string.Empty)</td>
                </tr>
                i++;
            }
        </tbody>
    </table>
</div>
<link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
<partial name="_AddDatatable">
    <div class="modal fade" id="importExcelData" tabindex="-1" aria-labelledby="importExcelDataTitle" aria-hidden="true">
        <div class="modal-dialog modal-md" role="document" style="margin: 10vh auto 0;">
            <div class="modal-content border-0 shadow-lg">

                <div class="modal-header bg-primary text-white border-0">
                    <h5 class="modal-title" id="importExcelDataTitle">
                        <i class="bi bi-file-earmark-excel-fill me-1"></i>
                        Import Data From Excel File
                    </h5>
                    <button type="button"
                            class="btn-close btn-close-white"
                            data-bs-dismiss="modal"
                            aria-label="Close">
                    </button>
                </div>

                <div class="modal-body">
                    <div class="mb-3 text-center">
                        <a asp-area="Risk"
                           asp-controller="RiskRegister"
                           asp-action="DownloadSampleFormat"
                           class="btn btn-outline-secondary">
                            <i class="bi bi-download me-1"></i>
                            Download Sample Format
                        </a>
                    </div>

                    <form asp-area="Risk"
                          asp-controller="RiskRegister"
                          asp-action="ImportProposals"
                          method="post"
                          enctype="multipart/form-data">

                        <input type="hidden" name="batchId" value="@ViewBag.id" />

                        <div class="mb-3">
                            <label for="excelFileInput" class="form-label">
                                <strong>Select Excel File</strong>
                            </label>
                            <div class="d-flex align-items-center">
                                <label for="excelFileInput"
                                       id="excelFileLabel"
                                       class="btn btn-outline-secondary me-3">
                                    <i class="bi bi-file-earmark-excel-fill me-1"></i>
                                    Choose Excel File
                                </label>
                                <span id="excelFileName" class="text-muted">
                                    No file chosen
                                </span>
                            </div>
                            <input type="file"
                                   id="excelFileInput"
                                   name="excelFile"
                                   accept=".xlsx,.xls"
                                   class="form-control visually-hidden" />
                        </div>

                        <button type="submit"
                                class="btn btn-success">
                            <i class="fa fa-check-circle me-1"></i> Upload
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            $(function () {
              $('#excelFileInput').on('change', function () {
                var fullPath = $(this).val();
                var fileName = '';
                if (fullPath) {
                  fileName = fullPath.split('\\').pop().split('/').pop();
                }
                $('#excelFileName').text(fileName || 'No file chosen');
              });
            });
        </script>
    }
